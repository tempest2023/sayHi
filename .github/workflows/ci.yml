name: Full Stack CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      client: ${{ steps.changes.outputs.client }}
      server: ${{ steps.changes.outputs.server }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          client:
            - 'client/**'
          server:
            - 'server/**'

  server-ci:
    needs: changes
    if: ${{ needs.changes.outputs.server == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Git Source
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install Dependencies
      run: |
        cd server
        npm ci

    - name: Lint Code
      run: |
        cd server
        npm run lint

    - name: Run Tests
      run: |
        cd server
        npm run test-local

    - name: Build Application
      run: |
        cd server
        npm run build

  client-ci:
    needs: changes
    if: ${{ needs.changes.outputs.client == 'true' }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Git Source
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json

    - name: Setup Expo CLI
      run: npm install -g @expo/cli

    - name: Install Dependencies
      run: |
        cd client
        npm ci

    - name: Lint Code
      run: |
        cd client
        npm run lint

    - name: Build for Web
      run: |
        cd client
        npm run web -- --non-interactive

    - name: Export with Expo
      run: |
        cd client
        npx expo export --platform web --output-dir web-build

  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Git Source
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Run Security Audit - Server
      run: |
        cd server
        npm audit --audit-level moderate

    - name: Run Security Audit - Client
      run: |
        cd client
        npm audit --audit-level moderate

  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Git Source
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Check Outdated Dependencies - Server
      run: |
        cd server
        npm outdated || true

    - name: Check Outdated Dependencies - Client
      run: |
        cd client
        npm outdated || true

  summary:
    runs-on: ubuntu-latest
    needs: [server-ci, client-ci, security-check, dependency-check]
    if: always()
    
    steps:
    - name: Summary
      run: |
        echo "## CI Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Server CI | ${{ needs.server-ci.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Client CI | ${{ needs.client-ci.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Security Check | ${{ needs.security-check.result }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Dependency Check | ${{ needs.dependency-check.result }} |" >> $GITHUB_STEP_SUMMARY